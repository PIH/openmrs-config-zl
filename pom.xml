<project>

    <modelVersion>4.0.0</modelVersion>
    <groupId>org.pih.openmrs.content</groupId>
    <artifactId>zl</artifactId>
    <name>ZL OpenMRS Content Package</name>
    <description>Top-Level content package for Zanmi Lasante OpenMRS distro</description>
    <url>https://github.com/PIH/openmrs-config-zl</url>
    <version>1.56.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <organization>
        <name>Partners In Health</name>
        <url>http://pih.org</url>
    </organization>

    <developers>
        <developer>
            <name>Partners In Health</name>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>Mozilla Public License 2.0 with Healthcare Disclaimer</name>
            <url>http://openmrs.org/license</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git://github.com/PIH/openmrs-config-zl.git</connection>
        <developerConnection>scm:git:ssh://github.com:PIH/openmrs-config-zl.git</developerConnection>
        <url>https://github.com/PIH/openmrs-config-zl</url>
    </scm>

    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/public</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>openmrs-repo</id>
            <name>OpenMRS Nexus Repository</name>
            <url>https://openmrs.jfrog.io/artifactory/public</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <parentBuildDir>${project.build.directory}/parent</parentBuildDir>
        <childBuildDir>${project.build.directory}/child</childBuildDir>
        <finalBuildDir>${project.build.directory}/package</finalBuildDir>
        <childBackendConfigDir>${childBuildDir}/configuration/backend_configuration</childBackendConfigDir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>pihemr</artifactId>
            <version>1.0.0-SNAPSHOT</version>
            <type>zip</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <!-- Download and unpack the parent project's configuration files into target/parent -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <execution>
                        <id>unpack</id>
                        <goals>
                            <goal>unpack-dependencies</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <includeGroupIds>${project.groupId}</includeGroupIds>
                            <includeArtifactIds>pihemr</includeArtifactIds>
                            <outputDirectory>${parentBuildDir}</outputDirectory>
                            <type>jar</type>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Copy this project's configuration files into target/child -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.3.1</version>
                <executions>
                    <execution>
                        <id>copy-content-properties</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${childBuildDir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}</directory>
                                    <includes>
                                        <include>content.properties</include>
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-backend-configuration</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${childBackendConfigDir}</outputDirectory>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/configuration</directory>
                                    <filtering>false</filtering>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Merge the parent and child configuration files -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy todir="${finalBuildDir}/configuration">
                                    <fileset dir="${parentBuildDir}/configuration"/>
                                    <fileset dir="${childBuildDir}/configuration"/>
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Merge the parent and child content.properties files -->
            <plugin>
                <groupId>org.polago.maven.plugins</groupId>
                <artifactId>merge-properties-maven-plugin</artifactId>
                <version>1.2</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>merge</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${finalBuildDir}</outputDirectory>
                            <outputFile>content.properties</outputFile>
                            <overwriteProperties>true</overwriteProperties>
                            <useBuildFilters>false</useBuildFilters>
                            <encoding>UTF-8</encoding>
                            <resources>
                                <resource>
                                    <filtering>false</filtering>
                                    <directory>${parentBuildDir}</directory>
                                    <includes>
                                        <include>content.properties</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <filtering>false</filtering>
                                    <directory>${childBuildDir}</directory>
                                    <includes>
                                        <include>content.properties</include>
                                    </includes>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Package up merged configuration into a zip artifact -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>3.7.1</version>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>${project.basedir}/assembly.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.7</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>release-sign-artifacts</id>
            <activation>
                <property>
                    <name>deployRelease</name>
                    <value>true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!--
                    To deploy non-snapshot versions to Sonatype, signatures must be generated useing gpg
                    Note that gpg2 key must exist on Bamboo server and the key and passphrase can be
                    passed on the command line.

                    Instructions for creating a key:
                    https://central.sonatype.org/pages/working-with-pgp-signatures.html

                    Command to run: clean deploy -U -DdeployRelease -Dgpg.passphrase=*** -Dgpg.keyname=[email_address_associated_with_generated_key]
                    -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
